import CostController from '../controllers/costController.js';
import * as keyboards from '../common/inlineKeyboards.js';
import { hasAccess } from '../common/utils.js';
import { MONTHS_PATTERN, accessDeniedMsg } from '../common/constants.js';
import log from '../common/logging.js';

export default class SumCostsCommand {
  bot;

  constructor(bot) {
    this.bot = bot;
    this.msg = null;
  }

  handle() {
    this.bot.command('sumday', async (ctx) => {
      log.info(`${ctx.from.first_name} —Å–º–æ—Ç—Ä–∏—Ç —Å—É–º–º—É –∑–∞ –¥–µ–Ω—å`);
      if (!hasAccess(ctx)) {
        return ctx.reply(accessDeniedMsg);
      }
      const sum = await CostController.getTodaySum();

      const costs = [];
      costs.push('<b>–†–∞—Å—Ö–æ–¥—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è</b>\n');
      let total = 0;
      sum.forEach((s) => {
        total += +s.total;
        costs.push(`${s.subject}: ${s.total}`);
      });
      costs.push(`\n<b>–ò—Ç–æ–≥–æ</b>: ${total.toFixed(2)}`);

      if (costs.length === 1) {
        return ctx.reply('–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–µ—Ç ü§ó');
      }
      ctx.replyWithHTML(costs.join('\n'));
    });

    this.bot.command('summonth', async (ctx) => {
      log.info(`${ctx.from.first_name} —Å–º–æ—Ç—Ä–∏—Ç —Å—É–º–º—É –∑–∞ –º–µ—Å—è—Ü`);
      if (!hasAccess(ctx)) {
        return ctx.reply(accessDeniedMsg);
      }
      this.msg = await ctx.reply(
        '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü –¥–ª—è –æ—Ç—á–µ—Ç–∞',
        keyboards.months()
      );
    });

    this.bot.action(MONTHS_PATTERN, async (ctx) => {
      await ctx.deleteMessage(this.msg.message_id);
      const month = ctx.callbackQuery.data;
      const sum = await CostController.getSumByCategoty(month);
      if (!sum) {
        await ctx.reply(`–ó–∞ ${month} –Ω–µ –Ω–∞—à–µ–ª —Ä–∞—Å—Ö–æ–¥–æ–≤ü§®`);
        return;
      }

      let total = 0;
      const categories = [];
      sum.forEach((s) => {
        categories.push(`${s['categoryName']}: ${+s['amount'].toFixed(2)}`);
        total += +s['amount'];
      });

      categories.push(`<b>–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞ ${month}:</b> ${total.toFixed(2)}`);
      await ctx.replyWithHTML(categories.join('\n'));
    });
  }
}
